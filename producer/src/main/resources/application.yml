spring:
  application:
    name: producer
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # AS VALUE IS OBJECT WE NEED JSON NOT STRING.
      properties:
        spring.json.add.type.headers: false
        # whenever you send object there is something called as type id that is being added in header to tell consumer what java class message it is. So we are setting it to false.
  cloud:
    function:
      definition: sendRiderLocation;sendRiderStatus
#      uppercase,
        # this is the function name that we are going to expose at following endpoint
#    function.web.path: /uppercase
#      web:
#        path: /uppercase
    stream:
      function:
        definition: sendRiderLocation;sendRiderStatus
      bindings:
        sendRiderLocation-out-0:
#          destination: my-topic
          destination: my-new-topic-2
          content-type: application/json
        sendRiderStatus-out-0:
          destination: priti-topic
          content-type: text/plain
      poller:
        fixed-delay: 1000
      #you wish to generate messages every 1 seconds.
      kafka:
        binder:
          brokers: localhost:9092




